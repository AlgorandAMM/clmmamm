#pragma version 8
intcblock 0 1 1000 4 10000000000
bytecblock 0x61 0x62 0x72 0x70 0x67
txn NumAppArgs
intc_0 // 0
==
bnz main_l12
txna ApplicationArgs 0
pushbytes 0x08a956f7 // "set_governor(account)void"
==
bnz main_l11
txna ApplicationArgs 0
pushbytes 0x6b59d965 // "bootstrap(pay,asset,asset)uint64"
==
bnz main_l10
txna ApplicationArgs 0
pushbytes 0xb104fbde // "mint(axfer,axfer,uint64,asset,asset,asset)void"
==
bnz main_l9
txna ApplicationArgs 0
pushbytes 0xd806a06c // "burn(uint64,axfer,asset,asset,asset)void"
==
bnz main_l8
txna ApplicationArgs 0
pushbytes 0x4a88e055 // "swap(axfer,asset,asset)void"
==
bnz main_l7
err
main_l7:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
intc_0 // 0
getbyte
store 25
txna ApplicationArgs 2
intc_0 // 0
getbyte
store 26
txn GroupIndex
intc_1 // 1
-
store 24
load 24
gtxns TypeEnum
intc_3 // axfer
==
assert
load 24
load 25
load 26
callsub swap_7
intc_1 // 1
return
main_l8:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
btoi
store 19
txna ApplicationArgs 2
intc_0 // 0
getbyte
store 21
txna ApplicationArgs 3
intc_0 // 0
getbyte
store 22
txna ApplicationArgs 4
intc_0 // 0
getbyte
store 23
txn GroupIndex
intc_1 // 1
-
store 20
load 20
gtxns TypeEnum
intc_3 // axfer
==
assert
load 19
load 20
load 21
load 22
load 23
callsub burn_6
intc_1 // 1
return
main_l9:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
btoi
store 15
txna ApplicationArgs 2
intc_0 // 0
getbyte
store 16
txna ApplicationArgs 3
intc_0 // 0
getbyte
store 17
txna ApplicationArgs 4
intc_0 // 0
getbyte
store 18
txn GroupIndex
pushint 2 // 2
-
store 13
load 13
gtxns TypeEnum
intc_3 // axfer
==
assert
txn GroupIndex
intc_1 // 1
-
store 14
load 14
gtxns TypeEnum
intc_3 // axfer
==
assert
load 13
load 14
load 15
load 16
load 17
load 18
callsub mint_5
intc_1 // 1
return
main_l10:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
intc_0 // 0
getbyte
store 1
txna ApplicationArgs 2
intc_0 // 0
getbyte
store 2
txn GroupIndex
intc_1 // 1
-
store 0
load 0
gtxns TypeEnum
intc_1 // pay
==
assert
load 0
load 1
load 2
callsub bootstrap_4
store 3
pushbytes 0x151f7c75 // 0x151f7c75
load 3
itob
concat
log
intc_1 // 1
return
main_l11:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
intc_0 // 0
getbyte
callsub setgovernor_3
intc_1 // 1
return
main_l12:
txn OnCompletion
intc_0 // NoOp
==
bnz main_l14
err
main_l14:
txn ApplicationID
intc_0 // 0
==
assert
callsub create_0
intc_1 // 1
return

// create
create_0:
bytec 4 // "g"
global CreatorAddress
app_global_put
bytec_2 // "r"
intc_0 // 0
app_global_put
bytec_2 // "r"
intc_0 // 0
app_global_put
retsub

// auth_only
authonly_1:
bytec 4 // "g"
app_global_get
==
retsub

// auth_only
authonly_2:
bytec 4 // "g"
app_global_get
==
retsub

// set_governor
setgovernor_3:
store 27
txn Sender
callsub authonly_1
// unauthorized
assert
bytec 4 // "g"
load 27
txnas Accounts
app_global_put
retsub

// bootstrap
bootstrap_4:
store 6
store 5
store 4
txn Sender
callsub authonly_2
// unauthorized
assert
global GroupSize
pushint 2 // 2
==
// group size not 2
assert
load 4
gtxns Receiver
global CurrentApplicationAddress
==
// receiver not app address
assert
load 4
gtxns Amount
pushint 300000 // 300000
>=
// amount minimum not met
assert
load 5
txnas Assets
load 6
txnas Assets
<
// asset a or asset b incorrect
assert
intc_0 // 0
bytec_0 // "a"
app_global_get_ex
store 8
store 7
load 8
!
assert
bytec_0 // "a"
load 5
txnas Assets
app_global_put
intc_0 // 0
bytec_1 // "b"
app_global_get_ex
store 10
store 9
load 10
!
assert
bytec_1 // "b"
load 6
txnas Assets
app_global_put
intc_0 // 0
bytec_3 // "p"
app_global_get_ex
store 12
store 11
load 12
!
assert
bytec_3 // "p"
bytec_0 // "a"
app_global_get
bytec_1 // "b"
app_global_get
callsub docreatepooltoken_15
app_global_put
bytec_0 // "a"
app_global_get
callsub dooptin_14
bytec_1 // "b"
app_global_get
callsub dooptin_14
bytec_3 // "p"
app_global_get
retsub

// mint
mint_5:
store 42
store 41
store 40
store 39
store 38
store 37
load 41
txnas Assets
bytec_0 // "a"
app_global_get
==
// asset a incorrect
assert
load 42
txnas Assets
bytec_1 // "b"
app_global_get
==
// asset b incorrect
assert
load 40
txnas Assets
bytec_3 // "p"
app_global_get
==
// asset pool incorrect
assert
load 37
gtxns Sender
txn Sender
==
load 38
gtxns Sender
txn Sender
==
&&
// invalid sender
assert
load 37
gtxns AssetReceiver
global CurrentApplicationAddress
==
// receiver not app address
assert
load 37
gtxns XferAsset
bytec_0 // "a"
app_global_get
==
// asset a incorrect
assert
load 37
gtxns AssetAmount
intc_0 // 0
>
// amount minimum not met
assert
load 38
gtxns AssetReceiver
global CurrentApplicationAddress
==
// receiver not app address
assert
load 38
gtxns XferAsset
bytec_1 // "b"
app_global_get
==
// asset b incorrect
assert
load 38
gtxns AssetAmount
intc_0 // 0
>
// amount minimum not met
assert
global CurrentApplicationAddress
load 40
asset_holding_get AssetBalance
store 44
store 43
load 39
itob
app_global_get
store 45
load 39
itob
app_global_get
store 46
load 45
intc_0 // 0
==
load 46
intc_0 // 0
==
&&
bnz mint_5_l2
intc 4 // 10000000000
load 43
-
load 45
load 37
gtxns AssetAmount
-
load 46
load 38
gtxns AssetAmount
-
load 37
gtxns AssetAmount
load 38
gtxns AssetAmount
callsub tokenstomint_9
b mint_5_l3
mint_5_l2:
load 37
gtxns AssetAmount
load 38
gtxns AssetAmount
callsub tokenstomintinitial_10
mint_5_l3:
store 47
load 47
intc_0 // 0
>
// outgoing amount too low
assert
load 39
itob
load 45
load 37
gtxns AssetAmount
+
app_global_put
load 39
itob
load 46
load 38
gtxns AssetAmount
+
app_global_put
txn Sender
bytec_3 // "p"
app_global_get
load 47
callsub doaxfer_13
retsub

// burn
burn_6:
store 59
store 58
store 57
store 56
store 55
load 57
txnas Assets
bytec_3 // "p"
app_global_get
==
// asset pool incorrect
assert
load 58
txnas Assets
bytec_0 // "a"
app_global_get
==
// asset a incorrect
assert
load 59
txnas Assets
bytec_1 // "b"
app_global_get
==
// asset b incorrect
assert
load 56
gtxns AssetReceiver
global CurrentApplicationAddress
==
// receiver not app address
assert
load 56
gtxns XferAsset
bytec_3 // "p"
app_global_get
==
// asset pool incorrect
assert
load 56
gtxns Sender
txn Sender
==
// invalid sender
assert
global CurrentApplicationAddress
load 57
asset_holding_get AssetBalance
store 61
store 60
load 55
itob
app_global_get
store 62
load 55
itob
app_global_get
store 63
load 56
gtxns AssetAmount
store 64
load 64
load 62
load 56
gtxns AssetAmount
callsub tokenstoburn_11
store 65
load 64
load 63
load 56
gtxns AssetAmount
callsub tokenstoburn_11
store 66
txn Sender
bytec_0 // "a"
app_global_get
load 65
callsub doaxfer_13
txn Sender
bytec_1 // "b"
app_global_get
load 66
callsub doaxfer_13
retsub

// swap
swap_7:
store 72
store 71
store 70
load 71
txnas Assets
bytec_0 // "a"
app_global_get
==
// asset a incorrect
assert
load 72
txnas Assets
bytec_1 // "b"
app_global_get
==
// asset b incorrect
assert
load 70
gtxns XferAsset
bytec_0 // "a"
app_global_get
==
load 70
gtxns XferAsset
bytec_1 // "b"
app_global_get
==
||
// asset a or asset b incorrect
assert
load 70
gtxns AssetAmount
intc_0 // 0
>
// amount minimum not met
assert
load 70
gtxns Sender
txn Sender
==
// invalid sender
assert
load 70
gtxns AssetAmount
store 73
intc_0 // 0
store 74
bytec_2 // "r"
app_global_get
intc_0 // 0
==
bytec_2 // "r"
app_global_get
pushint 10 // 10
==
||
bnz swap_7_l27
swap_7_l1:
load 73
intc_0 // 0
>
load 74
pushint 10 // 10
<
&&
bz swap_7_l28
intc_0 // 0
store 75
load 70
gtxns XferAsset
bytec_0 // "a"
app_global_get
==
bnz swap_7_l26
bytec_2 // "r"
app_global_get
itob
app_global_get
store 75
swap_7_l4:
intc_0 // 0
store 76
load 70
gtxns XferAsset
bytec_0 // "a"
app_global_get
==
bnz swap_7_l25
bytec_0 // "a"
app_global_get
swap_7_l6:
bytec_0 // "a"
app_global_get
==
bnz swap_7_l24
bytec_2 // "r"
app_global_get
itob
app_global_get
store 76
swap_7_l8:
intc_0 // 0
store 77
load 73
pushint 100 // 100
<=
bnz swap_7_l17
pushint 100 // 100
load 75
load 76
callsub tokenstoswap_12
store 77
load 77
intc_0 // 0
>
// outgoing amount too low
assert
load 70
gtxns XferAsset
load 75
pushint 100 // 100
+
callsub setsupplyfortick_8
load 70
gtxns XferAsset
bytec_0 // "a"
app_global_get
==
bnz swap_7_l16
bytec_0 // "a"
app_global_get
swap_7_l11:
load 76
load 77
-
callsub setsupplyfortick_8
txn Sender
load 70
gtxns XferAsset
bytec_0 // "a"
app_global_get
==
bnz swap_7_l15
bytec_0 // "a"
app_global_get
swap_7_l13:
load 77
callsub doaxfer_13
intc_0 // 0
store 73
bytec_2 // "r"
bytec_2 // "r"
app_global_get
intc_1 // 1
+
app_global_put
swap_7_l14:
load 74
intc_1 // 1
+
store 74
b swap_7_l1
swap_7_l15:
bytec_1 // "b"
app_global_get
b swap_7_l13
swap_7_l16:
bytec_1 // "b"
app_global_get
b swap_7_l11
swap_7_l17:
load 73
load 75
load 76
callsub tokenstoswap_12
store 77
load 77
intc_0 // 0
>
// outgoing amount too low
assert
load 70
gtxns XferAsset
load 75
load 73
+
callsub setsupplyfortick_8
load 70
gtxns XferAsset
bytec_0 // "a"
app_global_get
==
bnz swap_7_l23
bytec_0 // "a"
app_global_get
swap_7_l19:
load 76
load 77
-
callsub setsupplyfortick_8
txn Sender
load 70
gtxns XferAsset
bytec_0 // "a"
app_global_get
==
bnz swap_7_l22
bytec_0 // "a"
app_global_get
swap_7_l21:
load 77
callsub doaxfer_13
intc_0 // 0
store 73
b swap_7_l14
swap_7_l22:
bytec_1 // "b"
app_global_get
b swap_7_l21
swap_7_l23:
bytec_1 // "b"
app_global_get
b swap_7_l19
swap_7_l24:
bytec_2 // "r"
app_global_get
itob
app_global_get
store 76
b swap_7_l8
swap_7_l25:
bytec_1 // "b"
app_global_get
b swap_7_l6
swap_7_l26:
bytec_2 // "r"
app_global_get
itob
app_global_get
store 75
b swap_7_l4
swap_7_l27:
bytec_2 // "r"
intc_1 // 1
app_global_put
b swap_7_l1
swap_7_l28:
load 73
intc_0 // 0
==
// This swap cannot be supported
assert
retsub

// set_supply_for_tick
setsupplyfortick_8:
store 78
bytec_0 // "a"
app_global_get
==
bnz setsupplyfortick_8_l2
bytec_2 // "r"
app_global_get
itob
load 78
app_global_put
b setsupplyfortick_8_l3
setsupplyfortick_8_l2:
bytec_2 // "r"
app_global_get
itob
load 78
app_global_put
setsupplyfortick_8_l3:
retsub

// tokens_to_mint
tokenstomint_9:
store 52
store 51
store 50
store 49
store 48
load 51
intc_2 // 1000
mulw
intc_0 // 0
load 49
divmodw
pop
pop
swap
!
assert
store 53
load 52
intc_2 // 1000
mulw
intc_0 // 0
load 50
divmodw
pop
pop
swap
!
assert
store 54
load 53
load 54
<
bnz tokenstomint_9_l2
load 54
b tokenstomint_9_l3
tokenstomint_9_l2:
load 53
tokenstomint_9_l3:
load 48
mulw
intc_0 // 0
intc_2 // 1000
divmodw
pop
pop
swap
!
assert
retsub

// tokens_to_mint_initial
tokenstomintinitial_10:
*
sqrt
intc_2 // 1000
-
retsub

// tokens_to_burn
tokenstoburn_11:
store 69
store 68
store 67
load 68
load 69
mulw
intc_0 // 0
load 67
divmodw
pop
pop
swap
!
assert
retsub

// tokens_to_swap
tokenstoswap_12:
store 81
store 80
store 79
load 79
intc_2 // 1000
pushint 5 // 5
-
mulw
load 81
uncover 2
dig 1
*
cover 2
mulw
cover 2
+
swap
intc_0 // 0
load 80
intc_2 // 1000
*
load 79
intc_2 // 1000
pushint 5 // 5
-
*
+
divmodw
pop
pop
swap
!
assert
retsub

// do_axfer
doaxfer_13:
store 31
store 30
store 29
itxn_begin
intc_3 // axfer
itxn_field TypeEnum
load 30
itxn_field XferAsset
load 31
itxn_field AssetAmount
load 29
itxn_field AssetReceiver
intc_0 // 0
itxn_field Fee
itxn_submit
retsub

// do_opt_in
dooptin_14:
store 28
global CurrentApplicationAddress
load 28
intc_0 // 0
callsub doaxfer_13
retsub

// do_create_pool_token
docreatepooltoken_15:
store 32
asset_params_get AssetUnitName
store 34
store 33
load 32
asset_params_get AssetUnitName
store 36
store 35
load 34
assert
load 36
assert
itxn_begin
pushint 3 // acfg
itxn_field TypeEnum
pushbytes 0x4450542d // "DPT-"
load 33
concat
pushbytes 0x2d // "-"
concat
load 35
concat
itxn_field ConfigAssetName
pushbytes 0x647074 // "dpt"
itxn_field ConfigAssetUnitName
intc 4 // 10000000000
itxn_field ConfigAssetTotal
pushint 3 // 3
itxn_field ConfigAssetDecimals
global CurrentApplicationAddress
itxn_field ConfigAssetManager
global CurrentApplicationAddress
itxn_field ConfigAssetReserve
intc_0 // 0
itxn_field Fee
itxn_submit
itxn CreatedAssetID
retsub