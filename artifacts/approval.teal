#pragma version 8
intcblock 0 1 15 1000 10000000000
bytecblock 0x61 0x62 0x72 0x70 0x67 0x151f7c75
txn NumAppArgs
intc_0 // 0
==
bnz main_l16
txna ApplicationArgs 0
pushbytes 0x8b68c3a2 // "read_a_asset_supply(uint64)uint64"
==
bnz main_l15
txna ApplicationArgs 0
pushbytes 0x6c119a4b // "read_b_asset_supply(uint64)uint64"
==
bnz main_l14
txna ApplicationArgs 0
pushbytes 0x08a956f7 // "set_governor(account)void"
==
bnz main_l13
txna ApplicationArgs 0
pushbytes 0x6b59d965 // "bootstrap(pay,asset,asset)uint64"
==
bnz main_l12
txna ApplicationArgs 0
pushbytes 0xb104fbde // "mint(axfer,axfer,uint64,asset,asset,asset)void"
==
bnz main_l11
txna ApplicationArgs 0
pushbytes 0xd806a06c // "burn(uint64,axfer,asset,asset,asset)void"
==
bnz main_l10
txna ApplicationArgs 0
pushbytes 0x4a88e055 // "swap(axfer,asset,asset)void"
==
bnz main_l9
err
main_l9:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
intc_0 // 0
getbyte
store 27
txna ApplicationArgs 2
intc_0 // 0
getbyte
store 28
txn GroupIndex
intc_1 // 1
-
store 26
load 26
gtxns TypeEnum
pushint 4 // axfer
==
assert
load 26
load 27
load 28
callsub swap_9
intc_1 // 1
return
main_l10:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
btoi
store 21
txna ApplicationArgs 2
intc_0 // 0
getbyte
store 23
txna ApplicationArgs 3
intc_0 // 0
getbyte
store 24
txna ApplicationArgs 4
intc_0 // 0
getbyte
store 25
txn GroupIndex
intc_1 // 1
-
store 22
load 22
gtxns TypeEnum
pushint 4 // axfer
==
assert
load 21
load 22
load 23
load 24
load 25
callsub burn_8
intc_1 // 1
return
main_l11:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
btoi
store 17
txna ApplicationArgs 2
intc_0 // 0
getbyte
store 18
txna ApplicationArgs 3
intc_0 // 0
getbyte
store 19
txna ApplicationArgs 4
intc_0 // 0
getbyte
store 20
txn GroupIndex
pushint 2 // 2
-
store 15
load 15
gtxns TypeEnum
pushint 4 // axfer
==
assert
txn GroupIndex
intc_1 // 1
-
store 16
load 16
gtxns TypeEnum
pushint 4 // axfer
==
assert
load 15
load 16
load 17
load 18
load 19
load 20
callsub mint_7
intc_1 // 1
return
main_l12:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
intc_0 // 0
getbyte
store 3
txna ApplicationArgs 2
intc_0 // 0
getbyte
store 4
txn GroupIndex
intc_1 // 1
-
store 2
load 2
gtxns TypeEnum
intc_1 // pay
==
assert
load 2
load 3
load 4
callsub bootstrap_6
store 5
bytec 5 // 0x151f7c75
load 5
itob
concat
log
intc_1 // 1
return
main_l13:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
intc_0 // 0
getbyte
callsub setgovernor_5
intc_1 // 1
return
main_l14:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
btoi
callsub readbassetsupply_4
store 1
bytec 5 // 0x151f7c75
load 1
itob
concat
log
intc_1 // 1
return
main_l15:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
btoi
callsub readaassetsupply_3
store 0
bytec 5 // 0x151f7c75
load 0
itob
concat
log
intc_1 // 1
return
main_l16:
txn OnCompletion
intc_0 // NoOp
==
bnz main_l18
err
main_l18:
txn ApplicationID
intc_0 // 0
==
assert
callsub create_0
intc_1 // 1
return

// create
create_0:
bytec 4 // "g"
global CreatorAddress
app_global_put
bytec_2 // "r"
intc_0 // 0
app_global_put
bytec_2 // "r"
intc_0 // 0
app_global_put
retsub

// auth_only
authonly_1:
bytec 4 // "g"
app_global_get
==
retsub

// auth_only
authonly_2:
bytec 4 // "g"
app_global_get
==
retsub

// read_a_asset_supply
readaassetsupply_3:
itob
app_global_get
retsub

// read_b_asset_supply
readbassetsupply_4:
intc_2 // 15
+
itob
app_global_get
retsub

// set_governor
setgovernor_5:
store 29
txn Sender
callsub authonly_1
// unauthorized
assert
bytec 4 // "g"
load 29
txnas Accounts
app_global_put
retsub

// bootstrap
bootstrap_6:
store 8
store 7
store 6
txn Sender
callsub authonly_2
// unauthorized
assert
global GroupSize
pushint 2 // 2
==
// group size not 2
assert
load 6
gtxns Receiver
global CurrentApplicationAddress
==
// receiver not app address
assert
load 6
gtxns Amount
pushint 300000 // 300000
>=
// amount minimum not met
assert
load 7
txnas Assets
load 8
txnas Assets
<
// asset a or asset b incorrect
assert
intc_0 // 0
bytec_0 // "a"
app_global_get_ex
store 10
store 9
load 10
!
assert
bytec_0 // "a"
load 7
txnas Assets
app_global_put
intc_0 // 0
bytec_1 // "b"
app_global_get_ex
store 12
store 11
load 12
!
assert
bytec_1 // "b"
load 8
txnas Assets
app_global_put
intc_0 // 0
bytec_3 // "p"
app_global_get_ex
store 14
store 13
load 14
!
assert
bytec_3 // "p"
bytec_0 // "a"
app_global_get
bytec_1 // "b"
app_global_get
callsub docreatepooltoken_17
app_global_put
bytec_0 // "a"
app_global_get
callsub dooptin_16
bytec_1 // "b"
app_global_get
callsub dooptin_16
bytec_3 // "p"
app_global_get
retsub

// mint
mint_7:
store 44
store 43
store 42
store 41
store 40
store 39
load 43
txnas Assets
bytec_0 // "a"
app_global_get
==
// asset a incorrect
assert
load 44
txnas Assets
bytec_1 // "b"
app_global_get
==
// asset b incorrect
assert
load 42
txnas Assets
bytec_3 // "p"
app_global_get
==
// asset pool incorrect
assert
load 39
gtxns Sender
txn Sender
==
load 40
gtxns Sender
txn Sender
==
&&
// invalid sender
assert
load 39
gtxns AssetReceiver
global CurrentApplicationAddress
==
// receiver not app address
assert
load 39
gtxns XferAsset
bytec_0 // "a"
app_global_get
==
// asset a incorrect
assert
load 39
gtxns AssetAmount
intc_0 // 0
>
// amount minimum not met
assert
load 40
gtxns AssetReceiver
global CurrentApplicationAddress
==
// receiver not app address
assert
load 40
gtxns XferAsset
bytec_1 // "b"
app_global_get
==
// asset b incorrect
assert
load 40
gtxns AssetAmount
intc_0 // 0
>
// amount minimum not met
assert
global CurrentApplicationAddress
load 42
asset_holding_get AssetBalance
store 46
store 45
load 41
itob
app_global_get
store 47
load 41
intc_2 // 15
+
itob
app_global_get
store 48
load 47
intc_0 // 0
==
load 48
intc_0 // 0
==
&&
bnz mint_7_l2
intc 4 // 10000000000
load 45
-
load 47
load 39
gtxns AssetAmount
-
load 48
load 40
gtxns AssetAmount
-
load 39
gtxns AssetAmount
load 40
gtxns AssetAmount
callsub tokenstomint_11
b mint_7_l3
mint_7_l2:
load 39
gtxns AssetAmount
load 40
gtxns AssetAmount
callsub tokenstomintinitial_12
mint_7_l3:
store 49
load 49
intc_0 // 0
>
// outgoing amount too low
assert
load 41
itob
load 47
load 39
gtxns AssetAmount
+
app_global_put
load 41
intc_2 // 15
+
itob
load 48
load 40
gtxns AssetAmount
+
app_global_put
txn Sender
bytec_3 // "p"
app_global_get
load 49
callsub doaxfer_15
retsub

// burn
burn_8:
store 61
store 60
store 59
store 58
store 57
load 59
txnas Assets
bytec_3 // "p"
app_global_get
==
// asset pool incorrect
assert
load 60
txnas Assets
bytec_0 // "a"
app_global_get
==
// asset a incorrect
assert
load 61
txnas Assets
bytec_1 // "b"
app_global_get
==
// asset b incorrect
assert
load 58
gtxns AssetReceiver
global CurrentApplicationAddress
==
// receiver not app address
assert
load 58
gtxns XferAsset
bytec_3 // "p"
app_global_get
==
// asset pool incorrect
assert
load 58
gtxns Sender
txn Sender
==
// invalid sender
assert
global CurrentApplicationAddress
load 59
asset_holding_get AssetBalance
store 63
store 62
load 57
itob
app_global_get
store 64
load 57
intc_2 // 15
+
itob
app_global_get
store 65
intc 4 // 10000000000
load 62
load 58
gtxns AssetAmount
-
-
store 66
load 66
load 64
load 58
gtxns AssetAmount
callsub tokenstoburn_13
store 67
load 66
load 65
load 58
gtxns AssetAmount
callsub tokenstoburn_13
store 68
load 57
itob
load 64
load 67
-
app_global_put
load 57
intc_2 // 15
+
itob
load 65
load 68
-
app_global_put
txn Sender
bytec_0 // "a"
app_global_get
load 67
callsub doaxfer_15
txn Sender
bytec_1 // "b"
app_global_get
load 68
callsub doaxfer_15
retsub

// swap
swap_9:
store 74
store 73
store 72
load 73
txnas Assets
bytec_0 // "a"
app_global_get
==
// asset a incorrect
assert
load 74
txnas Assets
bytec_1 // "b"
app_global_get
==
// asset b incorrect
assert
load 72
gtxns XferAsset
bytec_0 // "a"
app_global_get
==
load 72
gtxns XferAsset
bytec_1 // "b"
app_global_get
==
||
// asset a or asset b incorrect
assert
load 72
gtxns AssetAmount
intc_0 // 0
>
// amount minimum not met
assert
load 72
gtxns Sender
txn Sender
==
// invalid sender
assert
load 72
gtxns AssetAmount
store 75
intc_0 // 0
store 76
bytec_2 // "r"
app_global_get
intc_0 // 0
==
bytec_2 // "r"
app_global_get
pushint 10 // 10
==
||
bnz swap_9_l27
swap_9_l1:
load 75
intc_0 // 0
>
load 76
pushint 10 // 10
<
&&
bz swap_9_l28
intc_0 // 0
store 77
load 72
gtxns XferAsset
bytec_0 // "a"
app_global_get
==
bnz swap_9_l26
bytec_2 // "r"
app_global_get
intc_2 // 15
+
itob
app_global_get
store 77
swap_9_l4:
intc_0 // 0
store 78
load 72
gtxns XferAsset
bytec_0 // "a"
app_global_get
==
bnz swap_9_l25
bytec_0 // "a"
app_global_get
swap_9_l6:
bytec_0 // "a"
app_global_get
==
bnz swap_9_l24
bytec_2 // "r"
app_global_get
intc_2 // 15
+
itob
app_global_get
store 78
swap_9_l8:
intc_0 // 0
store 79
load 75
pushint 100 // 100
<=
bnz swap_9_l17
pushint 100 // 100
load 77
load 78
callsub tokenstoswap_14
store 79
load 79
intc_0 // 0
>
// outgoing amount too low
assert
load 72
gtxns XferAsset
load 77
pushint 100 // 100
+
callsub setsupplyfortick_10
load 72
gtxns XferAsset
bytec_0 // "a"
app_global_get
==
bnz swap_9_l16
bytec_0 // "a"
app_global_get
swap_9_l11:
load 78
load 79
-
callsub setsupplyfortick_10
txn Sender
load 72
gtxns XferAsset
bytec_0 // "a"
app_global_get
==
bnz swap_9_l15
bytec_0 // "a"
app_global_get
swap_9_l13:
load 79
callsub doaxfer_15
load 75
pushint 100 // 100
-
store 75
bytec_2 // "r"
bytec_2 // "r"
app_global_get
intc_1 // 1
+
app_global_put
swap_9_l14:
load 76
intc_1 // 1
+
store 76
b swap_9_l1
swap_9_l15:
bytec_1 // "b"
app_global_get
b swap_9_l13
swap_9_l16:
bytec_1 // "b"
app_global_get
b swap_9_l11
swap_9_l17:
load 75
load 77
load 78
callsub tokenstoswap_14
store 79
load 79
intc_0 // 0
>
// outgoing amount too low
assert
load 72
gtxns XferAsset
load 77
load 75
+
callsub setsupplyfortick_10
load 72
gtxns XferAsset
bytec_0 // "a"
app_global_get
==
bnz swap_9_l23
bytec_0 // "a"
app_global_get
swap_9_l19:
load 78
load 79
-
callsub setsupplyfortick_10
txn Sender
load 72
gtxns XferAsset
bytec_0 // "a"
app_global_get
==
bnz swap_9_l22
bytec_0 // "a"
app_global_get
swap_9_l21:
load 79
callsub doaxfer_15
intc_0 // 0
store 75
b swap_9_l14
swap_9_l22:
bytec_1 // "b"
app_global_get
b swap_9_l21
swap_9_l23:
bytec_1 // "b"
app_global_get
b swap_9_l19
swap_9_l24:
bytec_2 // "r"
app_global_get
itob
app_global_get
store 78
b swap_9_l8
swap_9_l25:
bytec_1 // "b"
app_global_get
b swap_9_l6
swap_9_l26:
bytec_2 // "r"
app_global_get
itob
app_global_get
store 77
b swap_9_l4
swap_9_l27:
bytec_2 // "r"
intc_1 // 1
app_global_put
b swap_9_l1
swap_9_l28:
load 75
intc_0 // 0
==
// This swap cannot be supported
assert
retsub

// set_supply_for_tick
setsupplyfortick_10:
store 80
bytec_0 // "a"
app_global_get
==
bnz setsupplyfortick_10_l2
bytec_2 // "r"
app_global_get
intc_2 // 15
+
itob
load 80
app_global_put
b setsupplyfortick_10_l3
setsupplyfortick_10_l2:
bytec_2 // "r"
app_global_get
itob
load 80
app_global_put
setsupplyfortick_10_l3:
retsub

// tokens_to_mint
tokenstomint_11:
store 54
store 53
store 52
store 51
store 50
load 53
intc_3 // 1000
mulw
intc_0 // 0
load 51
divmodw
pop
pop
swap
!
assert
store 55
load 54
intc_3 // 1000
mulw
intc_0 // 0
load 52
divmodw
pop
pop
swap
!
assert
store 56
load 55
load 56
<
bnz tokenstomint_11_l2
load 56
b tokenstomint_11_l3
tokenstomint_11_l2:
load 55
tokenstomint_11_l3:
load 50
mulw
intc_0 // 0
intc_3 // 1000
divmodw
pop
pop
swap
!
assert
retsub

// tokens_to_mint_initial
tokenstomintinitial_12:
*
sqrt
intc_3 // 1000
-
retsub

// tokens_to_burn
tokenstoburn_13:
store 71
store 70
store 69
load 70
load 71
mulw
intc_0 // 0
load 69
divmodw
pop
pop
swap
!
assert
retsub

// tokens_to_swap
tokenstoswap_14:
store 83
store 82
store 81
load 81
intc_3 // 1000
pushint 5 // 5
-
mulw
load 83
uncover 2
dig 1
*
cover 2
mulw
cover 2
+
swap
intc_0 // 0
load 82
intc_3 // 1000
*
load 81
intc_3 // 1000
pushint 5 // 5
-
*
+
divmodw
pop
pop
swap
!
assert
retsub

// do_axfer
doaxfer_15:
store 33
store 32
store 31
itxn_begin
pushint 4 // axfer
itxn_field TypeEnum
load 32
itxn_field XferAsset
load 33
itxn_field AssetAmount
load 31
itxn_field AssetReceiver
intc_0 // 0
itxn_field Fee
itxn_submit
retsub

// do_opt_in
dooptin_16:
store 30
global CurrentApplicationAddress
load 30
intc_0 // 0
callsub doaxfer_15
retsub

// do_create_pool_token
docreatepooltoken_17:
store 34
asset_params_get AssetUnitName
store 36
store 35
load 34
asset_params_get AssetUnitName
store 38
store 37
load 36
assert
load 38
assert
itxn_begin
pushint 3 // acfg
itxn_field TypeEnum
pushbytes 0x4450542d // "DPT-"
load 35
concat
pushbytes 0x2d // "-"
concat
load 37
concat
itxn_field ConfigAssetName
pushbytes 0x647074 // "dpt"
itxn_field ConfigAssetUnitName
intc 4 // 10000000000
itxn_field ConfigAssetTotal
pushint 3 // 3
itxn_field ConfigAssetDecimals
global CurrentApplicationAddress
itxn_field ConfigAssetManager
global CurrentApplicationAddress
itxn_field ConfigAssetReserve
intc_0 // 0
itxn_field Fee
itxn_submit
itxn CreatedAssetID
retsub